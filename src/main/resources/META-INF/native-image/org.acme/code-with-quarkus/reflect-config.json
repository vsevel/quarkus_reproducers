[
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.client.impl.multipart.QuarkusMultipartFormUpload",
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.client.impl.StorkClientRequestFilter",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.wildfly.security.password.impl.PasswordFactorySpiImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.QuarkusContextStorage",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.core.runtime.VertxLogDelegateFactory",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.mdc.provider.LateBoundMDCProvider",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.hibernate.validator.runtime.jaxrs.ViolationReport",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.hibernate.validator.runtime.jaxrs.ViolationReport$Violation",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runner.ApplicationImpl",
    "fields": [
      {
        "name": "__QUARKUS_ANALYTICS_QUARKUS_VERSION"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.ws.rs.core.Cookie",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ArrayList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.HashMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.HashSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.LinkedList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.LinkedHashMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.LinkedHashSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.TreeMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.TreeSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.apicurio.registry.serde.avro.strategy.QualifiedRecordIdStrategy",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.confluent.kafka.serializers.subject.RecordNameStrategy",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.apicurio.registry.serde.avro.AvroKafkaSerializer",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.confluent.kafka.serializers.KafkaAvroDeserializer",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.netty.channel.socket.nio.NioSocketChannel"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.netty.channel.socket.nio.NioServerSocketChannel"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.netty.channel.socket.nio.NioDatagramChannel"
  },
  {
    "allDeclaredConstructors": true,
    "name": "sun.nio.ch.SelectorImpl",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.generated.BuildTimeRunTimeFixedConfigSourceBuilder"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.fasterxml.jackson.databind.ser.std.SqlDateSerializer",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.fasterxml.jackson.annotation.SimpleObjectIdResolver",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.fasterxml.jackson.databind.ext.CoreXMLSerializers"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.fasterxml.jackson.databind.ext.CoreXMLDeserializers"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.json.CommaStringToListDeserializer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.json.StringToNumberDeserializer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.json.StringToMapDeserializer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.json.ListToCommaStringSerializer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.json.ObjectToStringSerializer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.json.NumberToStringSerializer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.json.MapToStringSerializer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.impl.EnvelopeImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.impl.BodyElementImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.Body1_1Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.impl.HeaderImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.Fault1_1Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.DetailEntry1_2Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.impl.HeaderElementImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.impl.DetailEntryImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.impl.FaultImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.HeaderElement1_1Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.impl.DetailImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.Header1_2Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.Fault1_2Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.BodyElement1_2Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.Body1_2Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.Header1_1Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.impl.FaultElementImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.FaultElement1_2Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.HeaderElement1_2Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.impl.BodyImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.FaultElement1_1Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.Detail1_2Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.Envelope1_1Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.Envelope1_2Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.DetailEntry1_1Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.BodyElement1_1Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.Detail1_1Impl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.sun.xml.messaging.saaj.soap.impl.ElementImpl",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.net.URI",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.net.URI$Parser"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.SecurityException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.security.GeneralSecurityException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "javax.crypto.BadPaddingException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabasePasswordCredentialConfig",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseClientCertificateCredentialConfig",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseRSAPrivateKeyCredentialConfig",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignSelfIssuedResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignSelfIssuedResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPCreateKeyResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPCreateKeyResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitGenerateDataKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitGenerateDataKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleLoginAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleLoginAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateRootResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateRootResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignBatchResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignBatchResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseRSAPrivateKeyCredentialConfig$Format"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseRSAPrivateKeyCredentialConfig$Format",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIUpdateRoleParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIUpdateRoleParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIUpdateKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIUpdateKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretMetadataResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretMetadataResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPListKeysResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPListKeysResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRevokeParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRevokeParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListRolesResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListRolesResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsHashResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsHashResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitReadKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitReadKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignIntermediateResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignIntermediateResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadCrlConfigResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadCrlConfigResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignIntermediateParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignIntermediateParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsRegisterParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsRegisterParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIIssueResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIIssueResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRevokeParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRevokeParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQVHosts"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQVHosts",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeWithKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeWithKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.common.VaultHashAlgorithm"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.common.VaultHashAlgorithm",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseClientCertificateCredentialConfig$KeyType"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseClientCertificateCredentialConfig$KeyType",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitTrimKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitTrimKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenUpdateRoleParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenUpdateRoleParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabasePostgresPasswordAuthentication"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabasePostgresPasswordAuthentication",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.common.VaultWrapInfo"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.common.VaultWrapInfo",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISetSignedIntermediateParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISetSignedIntermediateParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadClusterConfigResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadClusterConfigResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv1.VaultSecretsKV1ReadResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv1.VaultSecretsKV1ReadResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPCreateKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPCreateKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.policy.VaultSysPolicyReadResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.policy.VaultSysPolicyReadResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleListSecretIdAccessorsResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleListSecretIdAccessorsResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRenewParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRenewParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadSecretIdResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadSecretIdResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenTidyTokensResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenTidyTokensResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListConnectionsResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListConnectionsResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyResultBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyResultBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthUserLockoutConfig"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthUserLockoutConfig",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIExtKeyUsage"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIExtKeyUsage",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadConfigResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadConfigResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCaChainResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCaChainResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingRewrapParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingRewrapParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListRolesResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListRolesResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsListingVisibility"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsListingVisibility",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassLoginParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassLoginParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerUnifiedDeltaCrlResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerUnifiedDeltaCrlResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthEnableConfig"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthEnableConfig",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuersConfigResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuersConfigResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassReadUserResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassReadUserResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateIssuerRootResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateIssuerRootResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleListRolesResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleListRolesResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPGenerateCodeResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPGenerateCodeResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignBatchResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignBatchResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapBatchResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapBatchResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesLoginAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesLoginAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapResultBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapResultBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingRewrapResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingRewrapResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadCertificateResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadCertificateResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigCrlParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigCrlParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthFullMethodInfo"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthFullMethodInfo",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.seal.VaultSysSealStatusResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.seal.VaultSysSealStatusResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListRolesResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListRolesResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQUpdateRoleParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQUpdateRoleParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPValidateCodeResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPValidateCodeResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCaCertResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCaCertResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.remount.VaultSysRemountStatusMigrationInfo"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.remount.VaultSysRemountStatusMigrationInfo",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerUnifiedCrlResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerUnifiedCrlResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesReadParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesReadParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListStaticRolesResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListStaticRolesResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigIssuersResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigIssuersResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassListUsersResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassListUsersResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthFullMethodInfo$Config"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthFullMethodInfo$Config",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretDataMetadata"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretDataMetadata",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassUpdateUserParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassUpdateUserParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleUpdateRoleIdParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleUpdateRoleIdParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListDatabaseResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListDatabaseResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleTidyTokensResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleTidyTokensResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigClusterParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigClusterParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHashResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHashResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitGenerateDataKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitGenerateDataKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenTidyTokensAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenTidyTokensAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKICommonNameValidation"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKICommonNameValidation",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.policy.VaultSysPolicyUpdateParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.policy.VaultSysPolicyUpdateParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseGenerateCredentialsResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseGenerateCredentialsResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.init.VaultSysInitStatusResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.init.VaultSysInitStatusResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleListRolesResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleListRolesResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListCertificatesResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListCertificatesResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenReadRoleResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenReadRoleResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.common.VaultLeasedResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.common.VaultLeasedResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadRoleResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadRoleResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPValidateCodeParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPValidateCodeParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewSelfParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewSelfParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitReadKeysConfigResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitReadKeysConfigResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingRewrapAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingRewrapAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptBatchResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptBatchResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadRoleResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadRoleResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigKeysResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigKeysResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPListKeysResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPListKeysResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadConfigResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadConfigResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesReadRoleResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesReadRoleResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.health.VaultHealthStatus"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.health.VaultHealthStatus",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigCaParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigCaParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsFullMountInfo"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsFullMountInfo",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadCertificateResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadCertificateResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleSecretIdAccessorParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleSecretIdAccessorParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingLookupParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingLookupParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesReadResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesReadResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadRoleResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadRoleResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleGenerateSecretIdParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleGenerateSecretIdParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewAccessorAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewAccessorAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseClientCertificateCredentialConfig$SignatureBits"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseClientCertificateCredentialConfig$SignatureBits",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignatureAlgorithm"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignatureAlgorithm",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingUnwrapResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingUnwrapResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignCsrResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignCsrResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassLoginResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassLoginResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListDatabaseResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListDatabaseResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesReadResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesReadResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesLoginResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesLoginResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadClusterConfigResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadClusterConfigResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignResultBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignResultBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSubkeysResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSubkeysResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeWithKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeWithKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingWrapAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingWrapAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsRandomParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsRandomParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenLookupParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenLookupParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadStaticRoleResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadStaticRoleResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadRoleResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadRoleResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthReadTuneResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthReadTuneResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQGenerateCredentialsResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQGenerateCredentialsResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitMarshalingAlgorithm"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitMarshalingAlgorithm",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2PatchSecretResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2PatchSecretResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.common.VaultAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.common.VaultAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateRootParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateRootParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewSelfAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewSelfAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenListAccessorsResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenListAccessorsResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCrlResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCrlResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeIssuerResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeIssuerResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesCountResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesCountResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenCreateTokenParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenCreateTokenParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsEnableConfig"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsEnableConfig",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenListAccessorsResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenListAccessorsResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadSecretIdAccessorResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadSecretIdAccessorResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignBatchParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignBatchParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsReloadMountsParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsReloadMountsParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleListSecretIdAccessorsResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleListSecretIdAccessorsResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsMountInfo"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsMountInfo",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadCrlConfigResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadCrlConfigResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigUrlsParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigUrlsParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleLoginAuthData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleLoginAuthData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretMetadataResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretMetadataResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapBatchParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapBatchParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleGenerateSecretIdResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleGenerateSecretIdResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadUrlsConfigResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadUrlsConfigResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitExportKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitExportKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIKeyInfo"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIKeyInfo",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitExportKeyType"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitExportKeyType",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListIssuersResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListIssuersResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigCaResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigCaResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesCountResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesCountResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyBatchResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyBatchResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacBatchResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacBatchResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCrlResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCrlResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleLoginResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleLoginResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadUrlsConfigResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadUrlsConfigResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadRoleResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadRoleResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQGenerateCredentialsResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQGenerateCredentialsResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenLookupResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenLookupResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitGetWrappingKeyResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitGetWrappingKeyResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassListUsersResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassListUsersResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignSelfIssuedParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignSelfIssuedParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenCreateResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenCreateResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenCreateAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenCreateAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.remount.VaultSysRemountRemountResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.remount.VaultSysRemountRemountResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignCsrParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignCsrParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListCertificatesResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListCertificatesResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRandomResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRandomResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQPermissions"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQPermissions",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseConfigParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseConfigParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2UpdateSecretOptions"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2UpdateSecretOptions",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRenewResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRenewResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthMethodInfo"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthMethodInfo",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleUpdateRoleParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleUpdateRoleParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerDeltaCrlResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerDeltaCrlResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitImportKeyVersionParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitImportKeyVersionParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacBatchResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacBatchResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigKeysResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigKeysResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigClusterResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigClusterResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateIssuerIntermediateCsrResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateIssuerIntermediateCsrResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQReadLeaseConfigResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQReadLeaseConfigResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsHashResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsHashResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsListResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsListResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitUpdateKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitUpdateKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignatureBits"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignatureBits",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2UpdateSecretParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2UpdateSecretParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListRevokedResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListRevokedResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyBatchResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyBatchResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv1.VaultSecretsKV1ListResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv1.VaultSecretsKV1ListResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHashResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHashResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.seal.VaultSysSealBackendStatusResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.seal.VaultSysSealBackendStatusResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIKeyType"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIKeyType",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportIssuerCertificateParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportIssuerCertificateParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleLoginParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleLoginParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRestoreKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRestoreKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitKeyVersion"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitKeyVersion",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsHashParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsHashParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2PatchSecretParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2PatchSecretParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadKeysConfigResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadKeysConfigResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleTidyTokensAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleTidyTokensAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitBackupKeyResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitBackupKeyResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCaChainResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCaChainResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewSelfResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewSelfResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsRandomResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsRandomResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQReadRoleResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQReadRoleResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseUpdateRoleParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseUpdateRoleParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigClusterResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigClusterResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassLoginAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassLoginAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListSecretResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListSecretResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleCreateCustomSecretIdParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleCreateCustomSecretIdParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListSecretResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListSecretResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigIssuersParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigIssuersParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsMountInfo$Config"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsMountInfo$Config",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.init.VaultSysInitParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.init.VaultSysInitParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignVerbatimParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignVerbatimParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKITidyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKITidyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitCreateKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitCreateKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseAuthType"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseAuthType",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListStaticRolesResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListStaticRolesResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPReadKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPReadKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportIssuerBundleParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportIssuerBundleParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv1.VaultSecretsKV1ListResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv1.VaultSecretsKV1ListResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsReloadPluginParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsReloadPluginParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.policy.VaultSysPolicyReadResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.policy.VaultSysPolicyReadResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptBatchParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptBatchParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingLookupResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingLookupResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsReadTuneResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsReadTuneResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitUpdateCacheConfigParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitUpdateCacheConfigParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRenewResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRenewResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptBatchResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptBatchResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigIssuersResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigIssuersResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigKeysParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIConfigKeysParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesConfigureParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesConfigureParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRotateRootResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRotateRootResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitCreateKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitCreateKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsReadResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsReadResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.common.VaultRandomSource"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.common.VaultRandomSource",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitGenerateDataKeyResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitGenerateDataKeyResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQReadLeaseConfigResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQReadLeaseConfigResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassLoginAuthData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassLoginAuthData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsFullMountInfo$Config"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsFullMountInfo$Config",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadConnectionResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadConnectionResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.common.VaultFormat"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.common.VaultFormat",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRotateDeltaCrlResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRotateDeltaCrlResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPValidateCodeResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPValidateCodeResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerDeltaCrlResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerDeltaCrlResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateCrossSignCsrResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateCrossSignCsrResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRotateCrlResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRotateCrlResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsRandomData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.tools.VaultSysToolsRandomData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListIssuersResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListIssuersResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesUpdateRoleParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesUpdateRoleParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsPluginDetails"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsPluginDetails",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptResultBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptResultBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsEnableParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsEnableParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewAccessorResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewAccessorResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretMetadataVersion"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretMetadataVersion",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSecureExportKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSecureExportKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthListResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthListResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenReadRoleResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenReadRoleResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.common.VaultAnyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.common.VaultAnyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIPrivateKeyFormat"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIPrivateKeyFormat",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassUpdateUserPoliciesParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassUpdateUserPoliciesParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenLookupAccessorResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenLookupAccessorResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsPluginInfo"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsPluginInfo",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitGetWrappingKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitGetWrappingKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHashFunction"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHashFunction",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptResultBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptResultBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadSecretIdAccessorResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadSecretIdAccessorResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPReadKeyResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPReadKeyResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQReadRoleResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQReadRoleResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitKeyType"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitKeyType",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.init.VaultSysInitResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.init.VaultSysInitResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesListResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesListResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacResultBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacResultBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthEnableParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthEnableParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCaCertResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerCaCertResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthReadTuneResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthReadTuneResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRotateCrlResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRotateCrlResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitReadKeysConfigResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitReadKeysConfigResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingLookupResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingLookupResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRandomData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRandomData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadRoleIdResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadRoleIdResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ListSecretsResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ListSecretsResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.remount.VaultSysRemountStatusResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.remount.VaultSysRemountStatusResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsReadResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsReadResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQConfigureLeaseParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQConfigureLeaseParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2SecretMetadataParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2SecretMetadataParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIIssueResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIIssueResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListKeysResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListKeysResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacBatchParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacBatchParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassUpdateUserPasswordParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassUpdateUserPasswordParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitKeyInfo"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitKeyInfo",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitReadCacheConfigResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitReadCacheConfigResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignCsrResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSignCsrResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingWrapResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingWrapResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.policy.VaultSysPolicyListResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.policy.VaultSysPolicyListResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.common.VaultWrappedResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.common.VaultWrappedResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptBatchParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptBatchParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQConfigureConnectionParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.rabbitmq.VaultSecretsRabbitMQConfigureConnectionParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListAuthResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListAuthResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthMethodInfo$Config"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthMethodInfo$Config",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsTuneParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsTuneParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesListRolesResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesListRolesResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesLoginAuthData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesLoginAuthData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitListKeysResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitListKeysResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuersConfigResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuersConfigResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListConnectionsResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListConnectionsResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesReadConfigResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesReadConfigResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesReadConfigResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesReadConfigResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthListingVisibility"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthListingVisibility",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeIssuerResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeIssuerResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSecureExportKeyResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitSecureExportKeyResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewAccessorParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewAccessorParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyBatchParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyBatchParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadStaticRoleResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadStaticRoleResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISetSignedIntermediateResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISetSignedIntermediateResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRandomParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRandomParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitVerifyBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRotateDeltaCrlResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRotateDeltaCrlResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2VersionsParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2VersionsParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRotateKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRotateKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthReadResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthReadResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSubkeysResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSubkeysResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleCreateCustomSecretIdResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleCreateCustomSecretIdResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitListKeysResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitListKeysResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRenewResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHashParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHashParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIKeyBits"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIKeyBits",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseCredentialConfig$KeyBits"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseCredentialConfig$KeyBits",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIIssueParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIIssueParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIManageType"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIManageType",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2UpdateConfigParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2UpdateConfigParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitReadCacheConfigResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitReadCacheConfigResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptBatchResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptBatchResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDataKeyType"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDataKeyType",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsReadTuneResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.mounts.VaultSysMountsReadTuneResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2UpdateSecretResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2UpdateSecretResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListRolesResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseListRolesResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadRoleIdResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadRoleIdResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.common.VaultTokenType"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.common.VaultTokenType",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateCsrParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateCsrParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenLookupSelfResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenLookupSelfResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerUnifiedCrlResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerUnifiedCrlResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIKeyUsage"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIKeyUsage",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignSelfIssuedResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignSelfIssuedResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptBatchResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitEncryptBatchResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitBackupKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitBackupKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.seal.VaultSysSealUnsealParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.seal.VaultSysSealUnsealParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesAliasNameSource"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesAliasNameSource",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseConnectionDetails"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseConnectionDetails",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerUnifiedDeltaCrlResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadIssuerUnifiedDeltaCrlResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListRevokedResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListRevokedResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadSecretIdResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadSecretIdResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleCreateCustomSecretIdResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleCreateCustomSecretIdResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeWithKeyResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeWithKeyResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenListRolesResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenListRolesResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseUpdateStaticRoleParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseUpdateStaticRoleParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenLookupAccessorParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenLookupAccessorParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRevokeAccessorParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenRevokeAccessorParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPCreateKeyResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPCreateKeyResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.policy.VaultSysPolicyListResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.policy.VaultSysPolicyListResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListAuthResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.plugins.VaultSysPluginsListAuthResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleSecretIdParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleSecretIdParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapBatchResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitRewrapBatchResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListKeysResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIListKeysResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesListRolesResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesListRolesResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignVerbatimResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKISignVerbatimResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIRevokeResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateRootResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateRootResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitUpdateKeysConfigParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitUpdateKeysConfigParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseCredentialType"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseCredentialType",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassReadUserResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.userpass.VaultAuthUserPassReadUserResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingWrapParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.wrapping.VaultSysWrappingWrapParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesReadRoleResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesReadRoleResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptBatchItem"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptBatchItem",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.remount.VaultSysRemountStatusResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.remount.VaultSysRemountStatusResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabasePostgresConnectionDetails"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabasePostgresConnectionDetails",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenListRolesResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenListRolesResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateIntermediateCsrResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateIntermediateCsrResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIFormat"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIFormat",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportIssuerBundleResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportIssuerBundleResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadRoleResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleReadRoleResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.remount.VaultSysRemountRemountParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.remount.VaultSysRemountRemountParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitExportKeyResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitExportKeyResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitImportKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitImportKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIUpdateKeyParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIUpdateKeyParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenTokenInfoData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.token.VaultAuthTokenTokenInfoData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateCsrResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIGenerateCsrResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadKeysConfigResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIReadKeysConfigResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitHmacParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesLoginParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.kubernetes.VaultAuthKubernetesLoginParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesListResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesListResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.transit.VaultSecretsTransitDecryptResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRevokePrefixParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRevokePrefixParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ReadSecretResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleGenerateSecretIdResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.auth.approle.VaultAuthAppRoleGenerateSecretIdResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.health.VaultSysHealthInfoResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.health.VaultSysHealthInfoResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadConnectionResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseReadConnectionResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportIssuerCertificateResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.pki.VaultSecretsPKIImportIssuerCertificateResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ListSecretsResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.kv2.VaultSecretsKV2ListSecretsResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthTuneOptions"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.auth.VaultSysAuthTuneOptions",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseGenerateStaticRoleCredentialsResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.database.VaultSecretsDatabaseGenerateStaticRoleCredentialsResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPGenerateCodeResultData"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.secrets.totp.VaultSecretsTOTPGenerateCodeResultData",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRevokeForceParams"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.leases.VaultSysLeasesRevokeForceParams",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.api.sys.seal.VaultSysSealBackendStatus"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.api.sys.seal.VaultSysSealBackendStatus",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "io.quarkus.vault.client.common.VaultBinaryResult"
    },
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.common.VaultBinaryResult",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.mutiny.vertx.core.AbstractVerticle"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.HdrHistogram.Histogram"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.HdrHistogram.DoubleHistogram"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.HdrHistogram.ConcurrentHistogram"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.binder.RestClientMetricsFilter"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.String",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.time.Duration",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Integer",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Long",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.cache.runtime.CacheConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.cache.runtime.CacheConfig$CaffeineConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.cache.runtime.CacheConfig$CaffeineConfig$CaffeineCacheConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Boolean",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.OptionalInt",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.OptionalLong",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.cache.runtime.CacheBuildConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.common.runtime.ResteasyReactiveConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.MemorySize",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.management.ManagementInterfaceBuildTimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.vertx.core.http.ClientAuth",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.management.ManagementAuthConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.VertxHttpBuildTimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.NormalizeRootHttpPathConverter"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.AuthConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.FormAuthConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.virtual.threads.VirtualThreadsConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.jackson.runtime.JacksonBuildTimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.time.ZoneId",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Include",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.ApplicationConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogBuildTimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LevelConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogBuildTimeConfig$CategoryBuildTimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.InheritableLevel",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.BuildAnalyticsConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.LiveReloadConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.LocalesBuildTimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Locale",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.health.runtime.SmallRyeHealthBuildFixedConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.MicrometerConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.MicrometerConfig$ExportConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.JsonConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.MicrometerConfig$CapabilityEnabled$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.PrometheusConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.MicrometerConfig$BinderConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.HttpClientConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.GrpcClientConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.VertxConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.HttpServerConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.StorkConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.RedisConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.ReactiveMessagingConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.VirtualThreadsConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.KafkaConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.GrpcServerConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.MPMetricsConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.NettyConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.scheduler.runtime.SchedulerConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.cronutils.model.CronType",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.build.exporter.OtlpExporterBuildConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.build.OTelBuildConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.build.InstrumentBuildTimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.build.OTelBuildConfig$SecurityEvents$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.build.OTelBuildConfig$SecurityEvents$SecurityEventType",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.build.TracesBuildConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.build.MetricsBuildConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.build.LogsBuildConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.hibernate.validator.runtime.HibernateValidatorBuildTimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.hibernate.validator.runtime.HibernateValidatorBuildTimeConfig$HibernateValidatorMethodBuildTimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.hibernate.validator.runtime.HibernateValidatorBuildTimeConfig$HibernateValidatorExpressionLanguageBuildTimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.hibernate.validator.messageinterpolation.ExpressionLanguageFeatureLevel",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceBuildTimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceBuildTimeConfig$StrategiesConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceBuildTimeConfig$StrategiesConfig$BeforeRetryConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceBuildTimeConfig$StrategiesConfig$FallbackConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.VaultBuildTimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.HealthConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.DevServicesConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.server.runtime.ResteasyReactiveServerRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.server.runtime.ResteasyReactiveServerRuntimeConfig$MultipartConfigGroup$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.server.runtime.ResteasyReactiveServerRuntimeConfig$InputPartConfigGroup$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.nio.charset.Charset",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.management.ManagementConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.ServerSslConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.CertificateConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.nio.file.Path",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.TrimmedStringConverter"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.FilterConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.ProxyConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.ProxyConfig$ForwardedPrecedence",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.TrustedProxyCheckPartConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.BodyConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.MultiPartConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.management.ManagementRuntimeAuthConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.PolicyMappingConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.PolicyMappingConfig$AppliesTo",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.PolicyConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.HeaderConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.ServerLimitsConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.VertxHttpConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.VertxHttpConfig$InsecureRequests",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.VertxHttpConfig$PayloadHint",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.cors.CORSConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.AccessLogConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.StaticResourcesConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.WebsocketServerConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.SameSiteCookieConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.vertx.core.http.CookieSameSite",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.TrafficShapingConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.AuthRuntimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.AuthRuntimeConfig$InclusiveMode",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.FormAuthRuntimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.http.runtime.FormAuthRuntimeConfig$CookieSameSite",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.restclient.config.RestClientsConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.rest.client.ext.QueryParamStyle",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.restclient.config.RestClientsConfig$RestClientConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.config.ConfigValue",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.restclient.config.RestClientsConfig$RestClientMultipartConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.restclient.config.RestClientsConfig$RestClientLoggingConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.TlsConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.TlsBucketConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.KeyStoreConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.P12KeyStoreConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.JKSKeyStoreConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.PemKeyCertConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.PemKeyCertConfig$KeyCertConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.KeyStoreCredentialProviderConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.TrustStoreConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.TrustStoreConfig$CertificateExpiryPolicy",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.P12TrustStoreConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.JKSTrustStoreConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.PemCertsConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.tls.runtime.config.TrustStoreCredentialProviderConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.CommandLineRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.shutdown.ShutdownConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.DebugRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.LaunchConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.init.InitRuntimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.init.InitRuntimeConfig$BooleanConverter"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.BuilderConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.BannerRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogRuntimeConfig$CategoryConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogRuntimeConfig$SyslogConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.logmanager.handlers.SyslogHandler$SyslogType",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.logmanager.handlers.SyslogHandler$Protocol",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.InetSocketAddressConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.logmanager.handlers.SyslogHandler$Facility",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.MemorySizeConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogRuntimeConfig$AsyncConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.logmanager.handlers.AsyncHandler$OverflowAction",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogRuntimeConfig$SocketConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.logmanager.handlers.SocketHandler$Protocol",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.logging.Level",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogRuntimeConfig$FileConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.io.File",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.CharsetConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogRuntimeConfig$FileConfig$RotationConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogRuntimeConfig$ConsoleConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.logging.LogRuntimeConfig$CleanupFilterConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.faulttolerance.DefaultBeforeRetryHandlerProvider$1",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.faulttolerance.DefaultFallbackHandlerProvider$1",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.faulttolerance.api.ApplyFaultTolerance",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.faulttolerance.api.RateLimit",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.faulttolerance.Asynchronous",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.faulttolerance.Retry",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.faulttolerance.Bulkhead",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.faulttolerance.Fallback",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.faulttolerance.api.ApplyGuard",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.faulttolerance.api.AsynchronousNonBlocking",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.faulttolerance.Timeout",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.faulttolerance.CircuitBreaker",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.ConfigConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.ConfigConfig$BuildTimeMismatchAtRuntime",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.ThreadPoolConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.console.ConsoleRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.narayana.jta.runtime.TransactionManagerConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.narayana.jta.runtime.TransactionManagerConfiguration$ObjectStoreConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.narayana.jta.runtime.ObjectStoreType",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.health.runtime.SmallRyeHealthRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.health.runtime.SmallRyeHealthRuntimeConfig$Enabled$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.runtime.HttpServerConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.runtime.PrometheusRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.runtime.VertxConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.config.runtime.HttpClientConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.scheduler.runtime.SchedulerRuntimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.scheduler.runtime.SchedulerRuntimeConfig$StartMode",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.OTelRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.SpanConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.InstrumentRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.BatchSpanProcessorConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.BatchLogRecordProcessorConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.MetricsRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.TracesRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.AttributeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.LogsRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterRuntimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.exporter.CompressionType",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.DurationConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterTracesConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterConfig$ProxyConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterConfig$TrustCert$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterConfig$KeyCert$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterMetricsConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterLogsConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.core.runtime.config.VertxConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.core.runtime.config.EventBusConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.core.runtime.config.JksConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.core.runtime.config.PfxConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.core.runtime.config.AddressResolverConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.core.runtime.config.ClusterConfiguration$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.mariadb_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.jconnect_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.postgres_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.h2_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.oracle_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.mysql_ab_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.enterprisedb_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.edb_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.microsoft_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.postgresql_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.ibm_driver"
  },
  {
    "allDeclaredConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers.mysql_driver"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.security.runtime.SecurityConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.security.runtime.SecurityConfig$SecurityEventsConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$RateLimitConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.time.temporal.ChronoUnit",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.faulttolerance.api.RateLimitType",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$CustomBackoffConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Class",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$ExponentialBackoffConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$TimeoutConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$FibonacciBackoffConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$ApplyGuardConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$AsynchronousConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$BeforeRetryConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$AsynchronousNonBlockingConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$CircuitBreakerConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.OptionalDouble",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.Class;",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$FallbackConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$RetryConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$BulkheadConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfig$StrategiesConfig$RetryWhenConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.openapi.runtime.OpenApiRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.swaggerui.runtime.SwaggerUiRuntimeConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.VaultRuntimeConfig$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.client.logging.LogConfidentialityLevel",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.net.URL",
    "allDeclaredMethods": true
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.VaultRuntimeConfig$KvPathConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.VaultEnterpriseConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.VaultTransitConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.TransitKeyConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.VaultTlsConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.VaultAuthenticationConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.VaultKubernetesAuthenticationConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.VaultUserpassAuthenticationConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.VaultAppRoleAuthenticationConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.config.CredentialsProviderConfig$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.stork.StorkConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.stork.ServiceConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.stork.StorkLoadBalancerConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.stork.StorkServiceRegistrarConfiguration$$CMImpl"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProperties"
      }
    ],
    "allDeclaredConstructors": true,
    "name": "io.quarkus.stork.StorkServiceDiscoveryConfiguration$$CMImpl"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[B"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[C"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[D"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[F"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[I"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[J"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[L"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[S"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Z"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.io.IOException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.Boolean;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.Byte;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.Character;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.Double;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.Float;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.Integer;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.Long;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.Object;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.Short;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.StackTraceElement;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "[Ljava.lang.String;"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Byte"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Character"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.ClassNotFoundException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Double"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Enum"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Exception"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Float"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Number"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.ReflectiveOperationException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.RuntimeException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Short"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.StackTraceElement"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.Throwable"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.lang.UnsupportedOperationException"
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "java.math.BigDecimal",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "java.math.BigInteger",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.net.SocketException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.net.UnknownHostException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.sql.Date"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.sql.Timestamp"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.time.Instant"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.time.LocalDate"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.time.Ser"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.AbstractMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.locks.AbstractOwnableSynchronizer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.locks.AbstractQueuedLongSynchronizer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.locks.AbstractQueuedSynchronizer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.AbstractSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Arrays$ArrayList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Calendar"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$AsLIFOQueue"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedCollection"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedEntry"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedEntrySet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedNavigableMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedNavigableSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedQueue"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedRandomAccessList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedSortedMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CheckedSortedSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$CopiesList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$EmptyList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$EmptyMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$EmptyNavigableMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$EmptyNavigableSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$EmptySet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$ReverseComparator"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$ReverseComparator2"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SetFromMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SingletonList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SingletonMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SingletonSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SynchronizedCollection"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SynchronizedList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SynchronizedMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SynchronizedNavigableMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SynchronizedNavigableSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SynchronizedRandomAccessList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SynchronizedSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SynchronizedSortedMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$SynchronizedSortedSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableCollection"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableEntry"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableEntrySet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableNavigableMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableNavigableSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableRandomAccessList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableSortedMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Collections$UnmodifiableSortedSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.CollSer"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.CompletionException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.ConcurrentHashMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.ConcurrentHashMap$BaseIterator"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.ConcurrentHashMap$BulkTask"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.ConcurrentHashMap$CollectionView"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.ConcurrentHashMap$KeySetView"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.ConcurrentHashMap$Node"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.ConcurrentHashMap$ReentrantLock"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.ConcurrentHashMap$Segment"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.ConcurrentHashMap$Traverser"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.Date"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.EnumMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.EnumSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.EnumSet$SerializationProxy"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.ExecutionException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.GregorianCalendar"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ImmutableCollections$AbstractImmutableCollection"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ImmutableCollections$AbstractImmutableList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ImmutableCollections$ListN"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ImmutableCollections$List12"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ImmutableCollections$AbstractImmutableSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ImmutableCollections$SetN"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ImmutableCollections$Set12"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ImmutableCollections$AbstractImmutableMap"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ImmutableCollections$Map1"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.ImmutableCollections$MapN"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.locks.ReentrantLock"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.locks.ReentrantLock$FairSync"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.locks.ReentrantLock$NonfairSync"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.concurrent.locks.ReentrantLock$Sync"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.RegularEnumSet"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.SimpleTimeZone"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.TimeZone"
  },
  {
    "allDeclaredConstructors": true,
    "name": "java.util.UUID"
  },
  {
    "allDeclaredConstructors": true,
    "name": "javax.ejb.EJBAccessException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "javax.ejb.EJBException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "javax.ejb.FinderException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "javax.ejb.CreateException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "javax.ejb.DuplicateKeyException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "javax.ejb.ObjectNotFoundException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "javax.persistence.PersistenceException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.persistence.PersistenceException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.arc.ArcUndeclaredThrowableException"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.core.StringParameterInjector$UnmodifiableArrayList"
  },
  {
    "allDeclaredConstructors": true,
    "name": "sun.util.calendar.ZoneInfo"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "condition": {
      "typeReachable": "org.acme.X"
    },
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.grpc.internal.DnsNameResolverProvider",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.grpc.internal.PickFirstLoadBalancerProvider",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.grpc.netty.NettyChannelProvider",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.server.runtime.exceptionmappers.AuthenticationCompletionExceptionMapper"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.server.runtime.exceptionmappers.AuthenticationRedirectExceptionMapper"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.server.runtime.exceptionmappers.ForbiddenExceptionMapper"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.runtime.mappers.BuiltinMismatchedInputExceptionMapper"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.server.runtime.exceptionmappers.AuthenticationFailedExceptionMapper$ExceptionMapper$c2c34c033791b6e419bbd19d3b82f053d38098b8"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.server.runtime.exceptionmappers.UnauthorizedExceptionMapper$ExceptionMapper$965510594634d484a005e8aaae2361e9c9c1ea07"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.runtime.mappers.NativeInvalidDefinitionExceptionMapper$ExceptionMapper$9b3903a6623e908ff3590aef8cbd6d07435aea0c"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.jta.common.JTAEnvironmentBean"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.jta.transaction.arjunacore.UserTransactionImple"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.coordinator.CheckedActionFactoryImple"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionManagerImple"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionSynchronizationRegistryImple"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.arjuna.common.ObjectStoreEnvironmentBean"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.ShadowNoFileLockStore"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.utils.SocketProcessId"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.recovery.AtomicActionRecoveryModule"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.jta.recovery.arjunacore.JTATransactionLogXAResourceOrphanFilter"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.jta.recovery.arjunacore.JTANodeNameXAResourceOrphanFilter"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.jta.recovery.arjunacore.JTAActionStatusServiceXAResourceOrphanFilter"
  },
  {
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "name": "com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.CidrAddressConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.InetAddressConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.RegexConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.PathConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.LocaleConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.configuration.ZoneIdConverter",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.faulttolerance.runtime.config.SmallRyeFaultToleranceConfigRelocate",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.smallrye.openapi.runtime.OpenApiConfigMapping",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.opentelemetry.runtime.config.MpTelemetryRelocateConfigSourceInterceptor",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.config.source.yaml.YamlConfigSourceLoader$InClassPath"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.config.source.yaml.YamlConfigSourceLoader$InFileSystem"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.config.PropertiesLocationConfigSourceFactory"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.config.source.yaml.YamlLocationConfigSourceFactory"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.config.crypto.AESGCMNoPaddingSecretKeysHandlerFactory",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.generated.StaticInitConfig"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.generated.RunTimeConfig"
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.enterprise.inject.Any",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.virtual.threads.VirtualThreads",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.health.Liveness",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.enterprise.inject.Default",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.context.api.NamedInstance",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.arc.All",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.health.api.Wellness",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.MeterFilterConstraint",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.enterprise.inject.Intercepted",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.cache.CacheName",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.netty.BossEventLoopGroup",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.enterprise.context.Initialized",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.config.inject.ConfigProperties",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.arc.impl.Identified",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.health.Startup",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.rest.client.inject.RestClient",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.health.api.HealthGroup",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.enterprise.context.BeforeDestroyed",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.netty.MainEventLoopGroup",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.arc.log.LoggerName",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.enterprise.inject.Decorated",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.runtime.annotations.CommandLineArguments",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.health.Readiness",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.eclipse.microprofile.config.inject.ConfigProperty",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vault.runtime.client.Private",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.enterprise.context.Destroyed",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.common.annotation.Identifier",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.inject.Named",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.security.Authenticated",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.micrometer.runtime.MicrometerCounted",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.security.PermissionsAllowed",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.micrometer.core.annotation.Timed",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.cache.runtime.CacheKeyParameterPositions",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.vertx.SafeVertxContext",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.context.api.CurrentThreadContext",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.annotation.security.RolesAllowed",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.smallrye.faulttolerance.FaultToleranceBinding",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.hibernate.validator.runtime.interceptor.MethodValidated",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.annotation.security.DenyAll",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.hibernate.validator.runtime.jaxrs.JaxrsEndPointValidated",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.opentelemetry.instrumentation.annotations.WithSpan",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.cache.CacheInvalidateAll",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.cache.CacheInvalidate",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.annotation.security.PermitAll",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.opentelemetry.instrumentation.annotations.AddingSpanAttributes",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.arc.runtime.ConfigStaticInitCheck",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.enterprise.context.control.ActivateRequestContext",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.arc.Lock",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.cache.CacheResult",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "jakarta.transaction.Transactional",
    "allDeclaredMethods": true
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.rest.client.reactive.jackson.runtime.serialisers.ClientJacksonMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.common.runtime.serialisers.vertx.VertxJsonArrayBasicMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.common.runtime.serialisers.vertx.VertxJsonObjectBasicMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.rest.client.reactive.jackson.runtime.serialisers.ClientJacksonMessageBodyReader"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.common.runtime.serialisers.vertx.VertxJsonArrayBasicMessageBodyReader"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.common.runtime.serialisers.vertx.VertxJsonObjectBasicMessageBodyReader"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.vertx.serializers.ServerVertxBufferMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.vertx.serializers.ServerMutinyBufferMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.vertx.serializers.ServerVertxAsyncFileMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.vertx.serializers.ServerMutinyAsyncFileMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.runtime.serialisers.BasicServerJacksonMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.runtime.serialisers.vertx.VertxJsonArrayMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.runtime.serialisers.vertx.VertxJsonObjectMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.server.runtime.QuarkusServerPathBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.runtime.serialisers.ServerJacksonMessageBodyReader"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.runtime.serialisers.vertx.VertxJsonArrayMessageBodyReader"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.jackson.runtime.serialisers.vertx.VertxJsonObjectMessageBodyReader"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerStringMessageBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerCharArrayMessageBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerByteArrayMessageBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerFormUrlEncodedProvider"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerInputStreamMessageBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.StreamingOutputMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerReaderBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerFileBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerFilePartBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.core.multipart.MultipartMessageBodyWriter"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerPathBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerPathPartBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerBooleanMessageBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerCharacterMessageBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerNumberMessageBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "io.quarkus.resteasy.reactive.server.runtime.QuarkusServerFileBodyHandler"
  },
  {
    "allDeclaredConstructors": true,
    "name": "org.jboss.resteasy.reactive.server.providers.serialisers.ServerDefaultTextPlainBodyHandler"
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.foobar.Bar",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.IndicatorsQuery",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.Status",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.IndicatorResponse",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.ObservablePeriod",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.X",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.foobar.Foo",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.Indicator",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.PortfolioContext",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.PositionStateType",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.IndicatorValue",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.PortfolioRef",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.Portfolio",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "allDeclaredClasses": true,
    "allDeclaredConstructors": true,
    "name": "org.acme.mdc.Value",
    "allDeclaredMethods": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.acme.GreetingResource",
    "fields": [
      {
        "name": "auth"
      }
    ]
  },
  {
    "name": "io.quarkus.vault.runtime.health.VaultHealthCheck",
    "fields": [
      {
        "name": "buildTimeConfig"
      },
      {
        "name": "client"
      }
    ]
  },
  {
    "name": "org.acme.X",
    "fields": [
      {
        "name": "clientToken"
      },
      {
        "name": "vaultBaseUrl"
      }
    ]
  },
  {
    "name": "org.acme.X",
    "fields": [
      {
        "name": "applicationVersion"
      },
      {
        "name": "applicationName"
      }
    ]
  },
  {
    "name": "io.quarkus.elytron.security.runtime.DefaultRoleDecoder",
    "fields": [
      {
        "name": "groupsAttribute"
      }
    ]
  },
  {
    "name": "org.acme.X",
    "fields": [
      {
        "name": "contextConfig"
      },
      {
        "name": "version"
      },
      {
        "name": "applicationName"
      }
    ]
  },
  {
    "name": "org.acme.X",
    "fields": [
      {
        "name": "failoverConfig"
      }
    ]
  },
  {
    "name": "org.acme.X",
    "fields": [
      {
        "name": "healthConfig"
      }
    ]
  },
  {
    "name": "org.acme.X",
    "fields": [
      {
        "name": "config"
      }
    ]
  },
  {
    "name": "io.quarkus.vault.runtime.VaultSystemBackendManager",
    "fields": [
      {
        "name": "buildTimeConfig"
      }
    ]
  },
  {
    "name": "io.quarkus.jackson.runtime.ConfigurationCustomizer",
    "fields": [
      {
        "name": "jacksonBuildTimeConfig"
      }
    ]
  },
  {
    "name": "org.acme.X",
    "fields": [
      {
        "name": "batchName"
      },
      {
        "name": "batchConfig"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "java.lang.String"
        ],
        "name": "getSecret"
      }
    ],
    "name": "org.acme.X",
    "fields": [
      {
        "name": "lokiConfig"
      }
    ]
  },
  {
    "name": "org.acme.X",
    "fields": [
      {
        "name": "applicationVersion"
      },
      {
        "name": "applicationName"
      },
      {
        "name": "batchConfig"
      }
    ]
  },
  {
    "name": "io.smallrye.health.SmallRyeHealthReporter",
    "fields": [
      {
        "name": "startupEvent"
      },
      {
        "name": "healthEvent"
      },
      {
        "name": "livenessEvent"
      },
      {
        "name": "wellnessEvent"
      },
      {
        "name": "readinessEvent"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "java.lang.String",
          "long"
        ],
        "name": "name"
      }
    ],
    "name": "java.lang.Thread$Builder$OfVirtual"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "factory"
      }
    ],
    "name": "java.lang.Thread$Builder"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ],
        "name": "<init>"
      }
    ],
    "name": "sun.security.provider.NativePRNG"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getUnsafe"
      }
    ],
    "name": "jdk.internal.misc.Unsafe"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "long",
          "int"
        ],
        "name": "<init>"
      },
      {
        "parameterTypes": [
          "long",
          "long"
        ],
        "name": "<init>"
      }
    ],
    "name": "java.nio.DirectByteBuffer"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getSystemCpuLoad"
      },
      {
        "parameterTypes": [],
        "name": "getProcessCpuTime"
      },
      {
        "parameterTypes": [],
        "name": "getCpuLoad"
      },
      {
        "parameterTypes": [],
        "name": "getProcessCpuLoad"
      }
    ],
    "name": "com.ibm.lang.management.OperatingSystemMXBean"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "getProcessCpuLoad"
      },
      {
        "parameterTypes": [],
        "name": "getSystemCpuLoad"
      },
      {
        "parameterTypes": [],
        "name": "getCpuLoad"
      },
      {
        "parameterTypes": [],
        "name": "getProcessCpuTime"
      }
    ],
    "name": "com.sun.management.OperatingSystemMXBean"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "java.util.List"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.AutoConfiguredOpenTelemetrySdkBuilderCustomizer$TextMapPropagatorCustomizers"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.security.identity.IdentityProviderManager",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.inject.spi.BeanManager",
          "io.quarkus.vertx.http.runtime.VertxHttpBuildTimeConfig",
          "io.quarkus.vertx.http.runtime.VertxHttpConfig",
          "jakarta.enterprise.inject.Instance",
          "jakarta.enterprise.inject.Instance",
          "boolean"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.security.HttpAuthenticator"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "jakarta.enterprise.event.Event",
          "boolean",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.inject.spi.BeanManager",
          "io.quarkus.arc.InjectableInstance",
          "io.quarkus.security.spi.runtime.AuthorizationController",
          "io.quarkus.vertx.http.runtime.VertxHttpBuildTimeConfig",
          "io.quarkus.vertx.http.runtime.security.JaxRsPathMatchingHttpSecurityPolicy"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.resteasy.reactive.server.runtime.security.EagerSecurityContext"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.opentelemetry.runtime.config.build.OTelBuildConfig",
          "java.util.List",
          "java.util.List"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.AutoConfiguredOpenTelemetrySdkBuilderCustomizer$TracerProviderCustomizer"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "jakarta.transaction.UserTransaction",
          "jakarta.transaction.TransactionManager",
          "io.quarkus.narayana.jta.runtime.TransactionManagerConfiguration"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.narayana.jta.RequestScopedTransaction"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.runtime.ApplicationConfig",
          "io.quarkus.opentelemetry.runtime.config.build.OTelBuildConfig",
          "io.quarkus.opentelemetry.runtime.config.runtime.OTelRuntimeConfig",
          "jakarta.enterprise.inject.Instance",
          "java.util.List"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.AutoConfiguredOpenTelemetrySdkBuilderCustomizer$TracingResourceCustomizer"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.opentelemetry.runtime.config.build.OTelBuildConfig",
          "jakarta.enterprise.inject.Instance"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.AutoConfiguredOpenTelemetrySdkBuilderCustomizer$MetricProviderCustomizer"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.vertx.http.runtime.VertxHttpConfig",
          "io.quarkus.vertx.http.runtime.VertxHttpBuildTimeConfig",
          "jakarta.enterprise.inject.Instance"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.security.PathMatchingHttpSecurityPolicy"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.opentelemetry.runtime.config.build.OTelBuildConfig",
          "io.quarkus.opentelemetry.runtime.config.runtime.OTelRuntimeConfig",
          "java.util.List"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.AutoConfiguredOpenTelemetrySdkBuilderCustomizer$SamplerCustomizer"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "org.eclipse.microprofile.openapi.OASFilter",
          "io.quarkus.smallrye.openapi.runtime.OpenApiRecorder$UserDefinedRuntimeFilters",
          "org.eclipse.microprofile.config.Config"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.smallrye.openapi.runtime.OpenApiDocumentService"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.scheduler.common.runtime.SchedulerContext",
          "io.quarkus.scheduler.runtime.SchedulerRuntimeConfig",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.event.Event",
          "io.vertx.core.Vertx",
          "io.quarkus.scheduler.runtime.SchedulerConfig",
          "jakarta.enterprise.inject.Instance",
          "java.util.concurrent.ScheduledExecutorService"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.scheduler.runtime.SimpleScheduler"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.opentelemetry.api.OpenTelemetry",
          "io.quarkus.opentelemetry.runtime.config.runtime.OTelRuntimeConfig"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.metrics.instrumentation.JvmMetricsService"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.opentelemetry.api.OpenTelemetry",
          "io.quarkus.opentelemetry.runtime.config.runtime.OTelRuntimeConfig"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.tracing.intrumentation.scheduler.OpenTelemetryJobInstrumenter"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.opentelemetry.runtime.config.build.OTelBuildConfig",
          "jakarta.enterprise.inject.Instance"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.AutoConfiguredOpenTelemetrySdkBuilderCustomizer$SimpleLogRecordProcessorCustomizer"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "boolean"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.faulttolerance.SpecCompatibility"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional",
          "java.util.Optional"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.faulttolerance.Enablement"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.micrometer.runtime.config.runtime.HttpServerConfig"
        ],
        "name": "metricsHttpWebSocketsUriTagFilter"
      },
      {
        "parameterTypes": [
          "io.quarkus.micrometer.runtime.config.runtime.HttpServerConfig"
        ],
        "name": "metricsHttpServerUriTagFilter"
      },
      {
        "parameterTypes": [
          "io.quarkus.micrometer.runtime.config.runtime.HttpServerConfig"
        ],
        "name": "metricsHttpPushUriTagFilter"
      },
      {
        "parameterTypes": [
          "io.quarkus.micrometer.runtime.config.runtime.HttpClientConfig"
        ],
        "name": "metricsHttpClientUriTagFilter"
      }
    ],
    "name": "io.quarkus.micrometer.runtime.binder.HttpMeterFilterProvider"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.vault.runtime.VaultConfigHolder",
          "boolean"
        ],
        "name": "privateVaultClient"
      },
      {
        "parameterTypes": [
          "io.vertx.core.Vertx",
          "io.quarkus.vault.runtime.VaultConfigHolder",
          "boolean"
        ],
        "name": "sharedVaultClient"
      }
    ],
    "name": "io.quarkus.vault.runtime.client.VaultClientProducer"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.micrometer.runtime.config.runtime.PrometheusRuntimeConfig"
        ],
        "name": "configure"
      }
    ],
    "name": "io.quarkus.micrometer.runtime.export.PrometheusMeterRegistryProvider"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "java.util.logging.Level",
          "org.acme.X"
        ],
        "name": "putLevel"
      },
      {
        "parameterTypes": [],
        "name": "initLevels"
      },
      {
        "parameterTypes": [],
        "name": "getAgent"
      }
    ],
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.arc.generator.Default_jakarta_enterprise_context_ApplicationScoped_ContextInstances"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.runtime.StartupEvent",
          "io.quarkus.cache.CacheManager"
        ],
        "name": "onStartup"
      }
    ],
    "name": "io.quarkus.cache.runtime.CacheManagerInitializer"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "jakarta.inject.Provider",
          "io.smallrye.faulttolerance.Enablement",
          "boolean",
          "io.smallrye.faulttolerance.ExecutorHolder"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.faulttolerance.metrics.MicrometerProvider"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.security.identity.IdentityProviderManager",
          "io.quarkus.security.spi.runtime.AuthorizationController",
          "jakarta.enterprise.inject.Instance",
          "io.quarkus.security.spi.runtime.BlockingSecurityExecutor",
          "jakarta.enterprise.inject.spi.BeanManager",
          "jakarta.enterprise.event.Event",
          "jakarta.enterprise.event.Event",
          "boolean"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.security.HttpAuthorizer"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "io.quarkus.vertx.http.runtime.security.AuthorizationPolicyStorage",
          "jakarta.enterprise.inject.Instance",
          "io.quarkus.vertx.http.runtime.VertxHttpConfig",
          "io.quarkus.vertx.http.runtime.VertxHttpBuildTimeConfig",
          "io.quarkus.security.spi.runtime.BlockingSecurityExecutor"
        ],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.security.JaxRsPathMatchingHttpSecurityPolicy"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "jakarta.ws.rs.core.MediaType",
          "java.lang.Class"
        ],
        "name": "isReadable"
      }
    ],
    "name": "org.jboss.resteasy.reactive.common.providers.serialisers.AbstractJsonMessageBodyReader"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "java.lang.String",
          "org.acme.mdc.IndicatorsQuery"
        ],
        "name": "indicators"
      },
      {
        "parameterTypes": [
          "java.lang.String"
        ],
        "name": "status"
      }
    ],
    "name": "org.acme.mdc.MoteurDeCalculService$$CDIWrapper"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "producesListConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceOptionalIntConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceFloatConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceOptionalDoubleConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceOptionalConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "producesSetConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceConfigValue"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceCharacterConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "getIntegerValue"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "getLongValue"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceBooleanConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceOptionalLongConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceStringConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceByteConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "producesMapConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceShortConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceDoubleConfigProperty"
      },
      {
        "parameterTypes": [
          "jakarta.enterprise.inject.spi.InjectionPoint"
        ],
        "name": "produceSupplierConfigProperty"
      }
    ],
    "name": "io.smallrye.config.inject.ConfigProducer"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "java.util.Map"
        ],
        "name": "getApplicationDeploymentLocalization"
      },
      {
        "parameterTypes": [
          "java.util.Map"
        ],
        "name": "refreshApplicationDeploymentLocalization"
      }
    ],
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "org.acme.foobar.Bar"
        ],
        "name": "bar"
      }
    ],
    "name": "org.acme.foobar.IGreetingServerResource$$CDIWrapper"
  },
  {
    "methods": [
      {
        "parameterTypes": [
          "java.net.URI"
        ],
        "name": "getRefreshClient"
      },
      {
        "parameterTypes": [
          "java.net.URI"
        ],
        "name": "getInitialClient"
      }
    ],
    "name": "org.acme.X"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.arc.generator.Default_jakarta_enterprise_context_RequestScoped_ContextInstances"
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.jaxrs.client.reactive.runtime.ClientResponseBuilderFactory",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.config.SmallRyeConfigProviderResolver",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.rest.client.reactive.jackson.runtime.serialisers.JacksonCleanupRestClientClosingTask",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.stork.StorkConfigProvider",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "org.eclipse.parsson.JsonProviderImpl",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.stork.impl.RoundRobinLoadBalancerProviderLoader",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.stork.loadbalancer.leastresponsetime.LeastResponseTimeLoadBalancerProviderLoader",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "org.acme.X",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.stork.servicediscovery.staticlist.StaticListServiceDiscoveryProviderLoader",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "org.jboss.resteasy.reactive.client.impl.ClientBuilderImpl",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.openapi.spi.OASFactoryResolverImpl",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "org.jboss.resteasy.reactive.client.impl.SseEventSourceBuilderImpl",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.rest.client.reactive.runtime.spi.JsonMissingMessageBodyReaderErrorMessageContextualizer",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.rest.client.reactive.runtime.spi.XmlMissingMessageBodyReaderErrorMessageContextualizer",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.runtime.jackson.QuarkusJacksonFactory",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.SOAPMessageFactory1_1Impl",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "com.sun.xml.messaging.saaj.soap.ver1_1.SOAPFactory1_1Impl",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.SOAPMessageFactory1_2Impl",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "com.sun.xml.messaging.saaj.soap.ver1_2.SOAPFactory1_2Impl",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "com.sun.xml.messaging.saaj.client.p2p.HttpSOAPConnectionFactory",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "com.sun.xml.messaging.saaj.soap.SAAJMetaFactoryImpl",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.RemoteIPAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.LocalIPAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.RequestProtocolAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.LocalPortAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.IdentUsernameAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.RequestMethodAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.QueryStringAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.RequestLineAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.BytesSentAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.DateTimeAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.RemoteUserAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.RequestURLAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.ThreadNameAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.LocalServerNameAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.RequestHeaderAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.ResponseHeaderAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.CookieAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.ResponseCodeAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.QueryParameterAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.SslClientCertAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.SslCipherAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.SslSessionIdAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.ResponseTimeAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.TransportProtocolAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.RequestSchemeAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.SecureExchangeAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.RemoteHostAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.RequestPathAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.NullAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.AllRequestHeadersAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.ExchangeDataAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.vertx.http.runtime.attribute.VertxMDCDataAttribute$Builder",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.bootstrap.logging.InitialConfigurator",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "org.jboss.resteasy.reactive.common.jaxrs.RuntimeDelegateImpl",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.tracing.spi.SpanExporterCDIProvider",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.faulttolerance.vertx.VertxEventLoop",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.metrics.spi.MetricsExporterCDIProvider",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.opentelemetry.runtime.logs.spi.LogsExporterCDIProvider",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.opentelemetry.sdk.autoconfigure.internal.EnvironmentResourceProvider",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.faulttolerance.propagation.ContextPropagationRequestContextControllerProvider",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.smallrye.faulttolerance.propagation.ContextPropagationRunnableWrapper",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  },
  {
    "methods": [
      {
        "parameterTypes": [],
        "name": "<init>"
      }
    ],
    "name": "io.quarkus.arc.runtime.logging.ArcLogFilterFactory",
    "queriedMethods": [
      {
        "parameterTypes": [],
        "name": "provider"
      }
    ]
  }
]